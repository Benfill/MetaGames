<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- Enable component scanning -->
    <context:component-scan base-package="io.github.benfill.metagames"/>
    
    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.h2.Driver" />
        <property name="url"
                 value="jdbc:h2:file:./src/main/resources/data/meta_games;DB_CLOSE_DELAY=-1;AUTO_SERVER=TRUE" />
        <property name="username" value="sa" />
        <property name="password" value="" />
    </bean>

    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan">
            <list>
                <value>model</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.format_sql">true</prop>
                <!-- Important for transaction management -->
                <prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate5.SpringSessionContext</prop>
                <prop key="hibernate.enable_lazy_load_no_trans">true</prop>
            </props>
        </property>
    </bean>

    <bean id="transactionManager"
          class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- Transaction advice -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="find*" read-only="true"/>
            <tx:method name="read*" read-only="true"/>
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>

    <!-- AOP configuration -->
    <aop:config>
        <aop:pointcut id="serviceOperation"
                      expression="execution(* service.impl.*.*(..)) || execution(* dao.impl.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceOperation"/>
    </aop:config>

    <!-- DAOs -->
    <bean id="playerDao" class="dao.impl.PlayerDaoImpl">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <bean id="teamDao" class="dao.impl.TeamDaoImpl">
        <property name="sessionFactory" ref="sessionFactory" />
        <constructor-arg ref="playerDao" />
    </bean>
    
    <bean id="gameDao" class="dao.impl.GameDaoImpl">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    
    <bean id="tournamentDao" class="dao.impl.TournamentDaoExtension">
        <property name="sessionFactory" ref="sessionFactory" />
        <constructor-arg ref="teamDao" />
    </bean>

    <!-- Services -->
    <bean id="playerService" class="service.impl.PlayerServiceImpl">
        <constructor-arg ref="playerDao" />
    </bean>

    <bean id="teamService" class="service.impl.TeamServiceImpl">
        <constructor-arg ref="teamDao" />
    </bean>
    
     <bean id="tournamentService" class="service.impl.TournamentServiceImpl">
        <constructor-arg ref="tournamentDao" />
        <constructor-arg ref="gameDao" />
    </bean>

    <!-- Controllers -->
    <bean id="playerController" class="controller.PlayerController">
        <constructor-arg ref="playerService" />
    </bean>

    <bean id="teamController" class="controller.TeamController">
        <constructor-arg ref="teamService" />
        <constructor-arg ref="playerService" />
    </bean>
    
    <bean id="tournamentController" class="controller.TournamentController">
        <constructor-arg ref="tournamentService" />
        <constructor-arg ref="teamService" />
    </bean>

    <!-- App -->
    <bean id="app" class="controller.App" init-method="init">
        <constructor-arg ref="playerController" />
        <constructor-arg ref="teamController" />
        <constructor-arg ref="tournamentController" />
    </bean>

</beans>